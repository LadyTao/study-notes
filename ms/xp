## 业务部门

> hr 只关注我在电信的经历。看来大业务才对人有吸引力，现在很多招聘都要求日写入tb 才能面试。
>
> 面试官，我说我现在的业务，他说他也是舆情，不就是算法。(其实电商不还是那点指标，也没啥，就是欺负你不懂电商业务，面试官连了解我们业务的想法都没有。)
>
> 这个部门坑，面不过卡我简历一个月。后沟通，说别的部门在等你们结果3天后才释放，估计是面的不好，直接泡着我，连复活不让。(内推的人说，正常来说很快走完流程，hr 不专业，你信不。然后跟我说，多找几家，准备后手。估计是知道挂着的原因)

- 有什么经验(做过什么项目)？

事后复盘，我们的业务单一，要有特色，突出我们的难点。

> 比如 bf 的改造。业务都是 http post ，思考下，如何监控http post（flink metric）。数据流转的方向。(建议涛涛可以改下 http post 的，然后分享下，抽象下 flink 层面和这种业务层面的监控结合)

> 涛涛可以套一些电商的指数，然后想想建模。(复合指数，配合离线数仓，我们就有业务思维了)
>
> 比如用户 uv, pv ，点击，评论等。衍生二次的传播系数，事件重要权重，事态严重程度，事件转折点。

项目中最难的一个点是什么？

>  多次调用算法，链路长 （为什么链路长）

看过什么源码

> flink subtask 源码， 这里没回答的太好。

mysql 熟悉吗，事务等级说下

kafka 熟悉吗，事务说下

kafka 你在生产中遇到过什么问题，如何监控

任务如何去监控

实时性如何保障

需要的计算资源如何计算，如何评估线上的资源是否合理

如何保障大促正常

如何保障业务不挂，挂了如何处理

> ps 他们想要 sla 分级，降级，弹性等方案的回答，这里回答的不好。基本所有的业务面试，都讲求实时性的监控，作业状态的监控，如何快速恢复。(特别是对于我们这种业务不复杂的，别人不会问我们业务，只能挖我们这些东西)

做一道题，lru 实现，o(1)，白板(态度很差了，前面回答的不好)

白板时间结束，剩下10分钟，你用idea 弄下，看下能不能跑通，你思路是有的，你一定刷过(言下之意idea能跑通你就有机会)

> idea 做不过，白板的时候精力消耗太多，脑子转不动了

为什么考虑我们部门，平台不更适合你？(不想要我)

> 你们平台需要微服务，个人微服务能力不高。(他们平台化有两种，一种是完全的java后端要求，一种是专做组件)

给我一些建议

> 回答太散，没有形成架构，容易跑题，业务的方向，你可以看下我们的文章。(因为不懂业务，只能扯回去技术，业务部门想要了解业务后再问技术)





## 实时计算-存储(要求：flink 和 hudi)

> 不需要介绍太深业务，面试官强调告诉我你 flink 的知识即可。
>
> flink cdc 面试官也是很鄙视，说根本是小公司玩的。要清楚 Flink 优势 
>
> > ps 忘了问，版本表消耗大他们怎么解决，flink 拉宽join。字节好像是没有 temporal join，估计也是性能差。

- 介绍下

- 你们平台是怎么做的，你们场景是什么(flink etl, 算法调用链)
- 平台的 sql debug 怎么做的 (mincluster 方案，太low，不想问我了)

> 这里有个相通点，面试官也问是不是operator 等级的数据输出debug，阿里现在应该是在做一个非sql 等级, operator 等级或者是 一个复杂sql 逻辑拆开的debug工具。(某离职阿里业务部门的人沟通过，他们一直给技术提过这个需求，他也问过我我们debug 怎么做)

- 一条sql到执行是怎么实现的(往下深挖，其实想要我回答catalog，因为简历写了元数据)？

> 解析-> 执行图 -> 运行 (这个太简单，细化一些)， sql -> calcite -> 执行代码 -> graph .... ；这里还是不满意，估计是漏了 catalog，旧版flink 1.9前 的确就是 calcite 解析，直接生成。现在还有一层，calcite 解析，放入到 catalog，做了一个基本的元数据封装。

- jobgraph 提交后又是怎么运行的？(回答了subtask 相关知识点，但是不是对方想要的，不细问)
- flink catalog 了解吗？(不了解)
- flink 网络说下 （新版旧版）

> akka ,netty；akka 组件沟通，netty 负责数据交换。新版xxx，带有流控xxx。旧版xxx，一个tm上面的数据会到影响。。。
>
> 开始深挖了

- 有个参数 backpressure 了解吗

> 跟网络buffer 有关，计算是。(没回答具体计算细节，估计他有点失望)

- 有个参数 busy xxx 了解吗？(1.13后)

> 不清楚。。。结束

- 你说了解源码，ck 说下

> 本质是依赖 state的容错，coordinator 发起xxx，source xxx，数据流动...;  
>
> 回答的不好，应该先从抽象的方面去说，分布式快照的原理，二段提交的完整流程，为了突出自己看过 subtask 源码，知道数据的流动依赖，突出了后面丢掉整体。

- coordinator 后面的那一部分再说下

> 把上面的数据流动再说了一次。ck 不能完成的因为xxx，对齐数据的流动一直没有到位xxx。表名自己懂。
>
> 他想要的是分布式快照的原理，二段提交的完整流程，这里忘了。直接说 coordinator 发起，显示自己看过源码，忽略了核心。**还是像第一次面试，为了突出自己了解的部分，把整体丢了。**

- 搞个冒泡

> 写成选择排序，强调说想想快排。已经蒙蔽了，没想到搞这么简单。

- 你的确看过一些源码，使用 flink 绝对没有问题，业务绝对可以完成，过去你的经历来看，我们另外有个组有个etl 的职位，你考虑吗？

> 又挂了，乐观的认为应该没事，坚持。
>
> 我感觉你真的合适，过去的经历，特别是电信的经历 (已经是坏事了，看来他们找我面试是跟一面一样，看在我有电信的经历)
>
> 还是坚持(脑子还停留在冒泡，日，怎么会出这个题！！！)
>
> 好，我了解也尊重你

- 你有什么事情想问

> 给一些建议
>
> 部分知识点没有串起来，回答有时候比较散，乱。的确是看过源码，解决过问题，但是应该回去想想怎么结合来说。(说出来部分细节，丢掉全局思维了。。。感觉坏了，，，kafka 没有问，赶紧说自己对kafka 的理解，试图挽回)
>
> kafka 的事务并发
>
> > 我们那么多数据并发的写着，没事的
> >
> > 唷，并发事务提交可见性导致数据延迟这个问题啊。kafka 架构缺陷来的，无法避免。(不再深挖了，已经是挂了。其实大家都是你懂的，很多时候，说xxx牛逼，是真不会考虑他缺陷。比如 flink join 性能，一方面试官鄙视 flink cdc ，一方面他显示出他们很多join，其实在我们场景下，长文本join 性能比他们电商差了10倍左右的性能，他估计也不想听。要么他们改过源码，不告诉你他们怎么做到的。反正原生的 flink join 我用着性能不怎么好，要好的话，官方也不会一直说在改进，各家公司的分享都是改这个的代码，提高性能了。)



























































